/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

// dt-formatter: indent = "  "
// dt-formatter: reindentMultilineIntegerCells = "dedent"

/ {
  behaviors {
    hm: homerow_mods {
      compatible = "zmk,behavior-hold-tap";
      label = "HOMEROW_MODS";
      #binding-cells = <2>;
      tapping-term-ms = <150>;
      quick-tap-ms = <0>;
      flavor = "tap-preferred";
      bindings = <&kp>, <&kp>;
    };
  };

  combos {
    compatible = "zmk,combos";

    tab {
      bindings = <&trans>;
      key-positions = <2 3>;
    };

    ctrl {
      bindings = <&kp LCTRL>;
      key-positions = <26 27>;
    };

    cmd {
      bindings = <&kp LCMD>;
      key-positions = <37 38>;
    };

    alt {
      bindings = <&kp LEFT_ALT>;
      key-positions = <39 40>;
    };

    shift {
      bindings = <&kp LSHIFT>;
      key-positions = <8 9>;
    };

    caps_word {
      bindings = <&caps_word>;
      key-positions = <17 18>;
    };

    delete {
      bindings = <&kp DEL>;
      key-positions = <32 33>;
    };
  };

  macros {
    zed_em_kay: zed_em_kay {
      compatible = "zmk,behavior-macro";
      label = "ZM_zed_em_kay";
      #binding-cells = <0>;
      bindings =
        <&macro_press>,
        <&kp LSHFT>,
        <&macro_tap>,
        <&kp Z &kp M &kp K>,
        <&macro_release>,
        <&kp LSHFT>;
    };
  };

  keymap {
    compatible = "zmk,keymap";

    base {
      bindings = <
&kp GRAVE     &kp Q       &kp W       &kp E        &kp R                 &kp T          &kp Y         &kp U         &kp I        &kp O       &kp P          &kp BSLH
&kp LCTRL     &hm LGUI A  &hm LALT S  &hm LCTRL D  &hm LSHIFT F          &kp G          &kp H         &hm RSHIFT J  &hm RCTRL K  &hm RALT L  &hm RGUI SEMI  &kp APOS
&kp LEFT_ALT  &kp Z       &kp X       &kp C        &kp V                 &kp B          &kp N         &kp M         &kp COMMA    &kp DOT     &kp FSLH       &kp BACKSLASH
                                      &lt 2 TAB    &mt LEFT_SHIFT SPACE  &lt 1 ENTER    &lt 1 ESCAPE  &mo 3         &lt 2 DEL
      >;
    };

    raise {
      bindings = <
&kp UNDERSCORE  &kp F1           &kp F2        &kp F3        &kp F4        &kp F5         &kp F6        &kp F7         &kp F8        &kp F9                &kp F10                &kp F11
&kp PLUS        &kp EXCLAMATION  &kp AT_SIGN   &kp HASH      &kp DOLLAR    &kp PERCENT    &kp CARET     &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp MINUS
&kp EQUAL       &kp NUMBER_1     &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5         &kp NUMBER_6  &kp N7         &kp N8        &kp N9                &kp N0                 &kp NON_US_BACKSLASH
                                               &trans        &trans        &trans         &trans        &mo 4          &trans
      >;
    };

    lower {
      bindings = <
&trans  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp HOME        &kp PRINTSCREEN  &kp PAGE_UP      &trans  &trans
&trans  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans    &trans    &trans       &kp MINUS  &kp LEFT_ARROW  &kp UP_ARROW     &kp RIGHT_ARROW  &trans  &trans
&trans  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &trans    &trans    &trans       &kp UNDER  &kp END         &kp DOWN_ARROW   &kp PAGE_DOWN    &trans  &trans
                                                     &trans    &mo 4     &trans       &trans     &trans          &trans
      >;
    };

    brackets {
      bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
      >;
    };

    both {
      bindings = <
&trans  &trans  &trans  &trans  &trans  &bt BT_SEL 0    &bt BT_SEL 3  &trans  &trans  &trans  &trans  &rgb_ug RGB_COLOR_HSB(0,60,50)
&trans  &trans  &trans  &trans  &trans  &bt BT_SEL 1    &bt BT_SEL 4  &trans  &trans  &trans  &trans  &rgb_ug RGB_COLOR_HSB(120,60,50)
&trans  &trans  &trans  &trans  &trans  &bt BT_SEL 2    &bt BT_CLR    &trans  &trans  &trans  &trans  &rgb_ug RGB_COLOR_HSB(240,60,50)
                        &trans  &trans  &trans          &trans        &trans  &trans
      >;
    };
  };
};
